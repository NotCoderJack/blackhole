buildscript {
    repositories aliyun_repositories
}
plugins {
    id 'org.inferred.processors' version '3.3.0'
    id "org.springframework.boot" version "2.2.2.RELEASE"
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "java"
}

group = String.format("%s.%s", project.main_group, project.getName())
version = project.main_version
sourceCompatibility = project.java_version
targetCompatibility = project.java_version

repositories.clear()
repositories.addAll(buildscript.repositories)

dependencies {
    processor 'org.inferred:freebuilder:2.6.1'
    implementation("com.google.guava:guava:29.0-jre")
    implementation("org.apache.commons:commons-lang3:3.0")
    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.freemarker:freemarker:2.3.9")
    testImplementation("junit:junit:4.12")
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    implementation(project(":core"))
}

test {
    useJUnitPlatform()
}

task runJar(type: Exec) {
    executable("java")
    args(
            String.format("-Dspring.config.location=%s", project.file("application.yaml")),
            "-jar", project.file(String.format("build/libs/%s-%s.jar", project.getName(), project.getVersion())),
            project.file("template"),
    )
    doFirst {
        println(String.join(" ", getCommandLine()))
    }
    dependsOn(bootJar)
}