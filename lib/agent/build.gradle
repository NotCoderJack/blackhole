buildscript {
    repositories {
        for (mavenRepositoryUrl in project.rootProject.ext.mavenRepositoryUrlList) {
            maven { url(mavenRepositoryUrl) }
        }
    }
}
plugins {
    id "java"
    id "org.inferred.processors" version project.rootProject.ext.jarDependencyVersion("org.inferred.processors", "")
    id "com.google.protobuf" version project.rootProject.ext.jarDependencyVersion("com.google.protobuf", "")
    id "idea"
}

group = project.rootProject.ext.constructGroupName("lib", project.getName())
version = project.rootProject.constructVersion()
sourceCompatibility = project.rootProject.ext.javaVersion
targetCompatibility = project.rootProject.ext.javaVersion

repositories {
    for (mavenRepositoryUrl in project.rootProject.ext.mavenRepositoryUrlList) {
        maven { url(mavenRepositoryUrl) }
    }
}

sourceSets {
    main {
        java {
            srcDirs "build/generated/source/proto/main/grpc"
            srcDirs "build/generated/source/proto/main/java"
        }
    }
}

def grpcVersion = "1.30.1"
def slf4jVersion = "1.7.15"
dependencies {
    implementation(project(":lib:core"))
    processor(project.rootProject.ext.jarDependency("org.inferred", "freebuilder"))
    implementation(project.rootProject.ext.jarDependency("com.google.guava", "guava"))
    implementation(project.rootProject.ext.jarDependency("org.apache.commons", "commons-lang3"))
    implementation(project.rootProject.ext.jarDependency("org.slf4j", "slf4j-api"))
    implementation(project.rootProject.ext.jarDependency("org.freemarker", "freemarker"))
    implementation(project.rootProject.ext.jarDependency("org.apache.commons:commons-exec", "1.3"))
    implementation(project.rootProject.ext.jarDependency("com.fasterxml.jackson.core", "jackson-databind"))
    implementation(project.rootProject.ext.jarDependency("com.fasterxml.jackson.core", "jackson-core"))
    implementation(project.rootProject.ext.jarDependency("com.fasterxml.jackson.core", "jackson-annotations"))
    // grpc packages: avoid sub-dependencies downloading from repo.maven.apache.org
    implementation(project.rootProject.ext.jarDependency("io.grpc", "grpc-api"))
    implementation(project.rootProject.ext.jarDependency("io.grpc", "grpc-core"))
    implementation(project.rootProject.ext.jarDependency("io.grpc", "grpc-netty-shaded"))
    implementation(project.rootProject.ext.jarDependency("io.grpc", "grpc-protobuf"))
    implementation(project.rootProject.ext.jarDependency("io.grpc", "grpc-stub"))
    implementation(project.rootProject.ext.jarDependency("info.picocli", "picocli"))
    // necessary for Java 9+
    implementation(project.rootProject.ext.jarDependency("org.apache.tomcat", "annotations-api"))
    testImplementation(project.rootProject.ext.jarDependency("junit", "junit"))
    testImplementation(project.rootProject.ext.jarDependency("org.slf4j", "slf4j-simple"))
    testImplementation(project.rootProject.ext.jarDependency("io.grpc", "grpc-testing"))
}
test {
    useJUnit()
}
protobuf {
    protoc {
        artifact = project.rootProject.ext.jarDependency("com.google.protobuf", "protoc")
    }
    plugins {
        grpc {
            artifact = project.rootProject.ext.jarDependency("io.grpc", "protoc-gen-grpc-java")
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}
