buildscript {
    repositories {
        for (mavenRepositoryUrl in project.rootProject.ext.mavenRepositoryUrlList) {
            maven { url(mavenRepositoryUrl) }
        }
    }
}
plugins {
    id "org.inferred.processors" version "3.3.0"
    id "java"
}

group = project.rootProject.ext.constructGroupName("lib", project.getName())
version = project.rootProject.constructVersion()
sourceCompatibility = project.rootProject.ext.javaVersion
targetCompatibility = project.rootProject.ext.javaVersion

repositories {
    for (mavenRepositoryUrl in project.rootProject.ext.mavenRepositoryUrlList) {
        maven { url(mavenRepositoryUrl) }
    }
}

def slf4jVersion = "1.7.15"
def jacksonVersion = "2.9.8"
def minaSshVersion = "2.5.1"
dependencies {
    implementation(project.rootProject.project("lib:core"))
    processor "org.inferred:freebuilder:2.6.1"
    implementation("com.google.guava:guava:29.0-jre")
    implementation("org.apache.commons:commons-lang3:3.0")
    implementation("org.slf4j:slf4j-api:${slf4jVersion}")
    implementation("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    implementation("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    implementation("org.apache.sshd:sshd-core:${minaSshVersion}")
    implementation("org.apache.sshd:sshd-scp:${minaSshVersion}")
    implementation("commons-io:commons-io:2.4")

    testImplementation(project.rootProject.ext.jarDependency("org.junit.jupiter", "junit-jupiter-api"))
    testRuntimeOnly(project.rootProject.ext.jarDependency("org.junit.jupiter", "junit-jupiter-engine"))
    testImplementation("org.slf4j:slf4j-simple:${slf4jVersion}")
}
test {
    useJUnitPlatform()
}
