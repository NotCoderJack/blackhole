def sshdKeyPath = "${project(":application:tool").buildDir.getAbsolutePath()}/keys"
ext {
    mainVersion = "v1.0.0"
    mainGroup = "teck.geekcity.blackhole"
    javaVersion = 1.8
    mavenRepositoryUrlList = [
            "https://maven.aliyun.com/repository/public",
            "https://maven.aliyun.com/repository/spring",
            "https://maven.aliyun.com/repository/mapr-public",
            "https://maven.aliyun.com/repository/spring-plugin",
            "https://maven.aliyun.com/repository/gradle-plugin",
            "https://maven.aliyun.com/repository/google",
            "https://maven.aliyun.com/repository/jcenter",
    ]
    gitCommitId = { ->
        def headDeafOutputStream = new ByteArrayOutputStream()
        exec {
            commandLine("git", "diff", "HEAD")
            standardOutput = headDeafOutputStream
        }
        def headDeaf = headDeafOutputStream.toString().trim()
        def clean = headDeaf.isEmpty()

        def commitIdOutputStream = new ByteArrayOutputStream()
        exec {
            commandLine("git", "rev-parse", "--short", "HEAD")
            standardOutput = commitIdOutputStream
        }
        return "${commitIdOutputStream.toString().trim()}_${clean ? "" : "dirty"}"
    }
    dockerImageNamePrefix = project.getName()
    constructGroupName = { middleName, projectName ->
        return "${ext.mainGroup}.${middleName}.${projectName} "
    }
    constructVersion = { ->
        return "${ext.mainVersion}_${ext.gitCommitId()}"
    }
    jarDependency = { group, artifact ->
        def slf4jVersion = "1.7.15"
        versionMapping = [
                "org.inferred:freebuilder"        : "2.6.1",
                "com.google.code.findbugs:jsr305" : "3.0.2",
                "com.google.guava:guava"          : "29.0-jre",
                "org.apache.commons:commons-lang3": "3.0",
                "org.slf4j:slf4j-api"             : slf4jVersion,
                "org.freemarker:freemarker"       : "2.3.9",
                "info.picocli:picocli"            : "4.5.0",
                "commons-io:commons-io"           : "2.4",
                "org.slf4j:slf4j-simple"          : slf4jVersion,
                "junit:junit"                     : "4.12",
        ]
        String key = "${group}:${artifact}"
        def version = versionMapping[key]
        if (!version) {
            throw new RuntimeException("version not found for \"${key}\"")
        }
        return "${key}:${version}"
    }
    keyPairFilePath = "${sshdKeyPath}/id_rsa.key.pair"
    idRsaFile = "${sshdKeyPath}/id_rsa"
    idRsaPubFile = "${sshdKeyPath}/id_rsa.pub"
}
